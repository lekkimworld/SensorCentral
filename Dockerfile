FROM node:21-alpine

EXPOSE 8080

# build args
ARG APP_NODE_ENV
ARG APP_GITCOMMIT
ARG APP_VERSION

# environment vars
ENV PORT=8080
ENV LOG_LEVEL="${LOG_LEVEL}"
ENV LOG_LEVEL_LOGGERS="${LOG_LEVEL_LOGGERS}"
ENV DATABASE_URL="${DATABASE_URL}"
ENV DATABASE_ALLOW_SCHEMA_UPGRADE="${DATABASE_ALLOW_SCHEMA_UPGRADE}"
ENV DATABASE_SSL="${DATABASE_SSL}"
ENV REDIS_URL="${REDIS_URL}"
ENV REDIS_TLS_URL="${REDIS_TLS_URL}"
ENV REDIS_CONNECTION_TIMEOUT="${REDIS_CONNECTION_TIMEOUT}"
ENV ADMIN_USERNAME="${ADMIN_USERNAME}"
ENV ADMIN_PASSWORD="${ADMIN_PASSWORD}"
ENV APP_NO_PROD_TLS="${APP_NO_PROD_TLS}"
ENV APP_PROTOCOL="${APP_PROTOCOL}"
ENV APP_DOMAIN="${APP_DOMAIN}"
ENV APP_TITLE="${APP_TITLE}"
ENV OIDC_PROVIDER_URL_GOOGLE="${OIDC_PROVIDER_URL_GOOGLE}}"
ENV OIDC_CLIENT_ID_GOOGLE="${OIDC_CLIENT_ID_GOOGLE}}"
ENV OIDC_CLIENT_SECRET_GOOGLE="${OIDC_CLIENT_SECRET_GOOGLE}}"
ENV OIDC_REDIRECT_URI_GOOGLE="${OIDC_REDIRECT_URI_GOOGLE}}"
ENV OIDC_PROVIDER_URL_GITHUB="${OIDC_PROVIDER_URL_GITHUB}}"
ENV OIDC_CLIENT_ID_GITHUB="${OIDC_CLIENT_ID_GITHUB}}"
ENV OIDC_CLIENT_SECRET_GITHUB="${OIDC_CLIENT_SECRET_GITHUB}}"
ENV OIDC_REDIRECT_URI_GITHUB="${OIDC_REDIRECT_URI_GITHUB}}"
ENV OIDC_PROVIDER_URL_MICROSOFT="${OIDC_PROVIDER_URL_MICROSOFT}}"
ENV OIDC_CLIENT_ID_MICROSOFT="${OIDC_CLIENT_ID_MICROSOFT}}"
ENV OIDC_CLIENT_SECRET_MICROSOFT="${OIDC_CLIENT_SECRET_MICROSOFT}}"
ENV OIDC_REDIRECT_URI_MICROSOFT="${OIDC_REDIRECT_URI_MICROSOFT}}"
ENV GOOGLE_SERVICE_ACCOUNT_EMAIL="${GOOGLE_SERVICE_ACCOUNT_EMAIL}"
ENV GOOGLE_TOKEN_URI="${GOOGLE_TOKEN_URI}"
ENV GOOGLE_PRIVATE_KEY="${GOOGLE_PRIVATE_KEY}"
ENV API_JWT_SECRET="${API_JWT_SECRET}"
ENV SESSION_SECRET="${SESSION_SECRET}"
ENV SMARTME_KEY="${SMARTME_KEY}"
ENV SMARTME_PROTOCOL="${SMARTME_PROTOCOL}"
ENV SMARTME_DOMAIN="${SMARTME_DOMAIN}"
ENV CRON_POWERMETER_SUBSCRIPTIONS_DISABLED="${CRON_POWERMETER_SUBSCRIPTIONS_DISABLED}"
ENV NOTIFICATIONS_DISABLED="${NOTIFICATIONS_DISABLED}"
ENV ALERTS_TIMEOUT_BINARY_SENSOR="${ALERTS_TIMEOUT_BINARY_SENSOR}"

# Create app directory
WORKDIR /usr/src/app

# Install app dependencies
COPY package*.json ./
RUN npm install

# Bundle app source and build
COPY . .
RUN npm run build

# build runtime .env file
COPY scripts/write_dotenv.sh ./
RUN /usr/src/app/write_dotenv.sh 

# run
CMD [ "npm", "run", "web-serve" ]
